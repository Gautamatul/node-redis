{"ast":null,"code":"var _jsxFileName = \"/Users/atulgautam/Desktop/my-app/src/components/Accounts.js\",\n  _s = $RefreshSig$();\nimport DataTable from 'react-data-table-component';\nimport { React, useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteAccount } from '../Actions/AccountActions';\nimport { useSelector } from 'react-redux';\nimport { Form, Label, Input, Button } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Accounts(props) {\n  _s();\n  const loading = useSelector(state => state.accounts.loading);\n  const dispatch = useDispatch();\n  // single click event use later for overlay. \n  const handleRowClicked = row => {\n    console.log(\"ROW CLICKED\");\n  };\n\n  // double click user later for edit \n  const handleRowDoubleClicked = row => console.log(\"ROW Double CLICKED\" + row);\n  const handleEditClick = e => {\n    console.log(\"BUTTON \" + JSON.stringify(e));\n  };\n  const handleDeleteClick = row => {\n    dispatch(deleteAccount(row.id));\n  };\n  const [columns, setColumns] = useState([]);\n  useEffect(() => {\n    setColumns([{\n      name: 'ACCOUNT ID',\n      selector: row => row.accountId,\n      sortable: true\n      // sortFunction: caseInsensitiveSort\n    }, {\n      name: 'ACCOUNT HOLDER',\n      selector: row => row.accountHolder\n    }, {\n      name: 'SALARY',\n      selector: row => row.salary,\n      sortable: true\n      // sortFunction: caseInsensitiveSort\n    }, {\n      name: 'EXPERIENCE',\n      selector: row => row.experience,\n      sortable: true\n      // sortFunction: caseInsensitiveSort\n    }, {\n      cell: row => /*#__PURE__*/_jsxDEV(Button, {\n        className: \"delete\",\n        onClick: () => handleEditClick(row),\n        children: \" EDIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 36\n      }, this),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true\n    }, {\n      cell: row => /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleDeleteClick(row),\n        children: \" DELETE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 36\n      }, this),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true\n    }]);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DataTable, {\n    columns: columns,\n    data: props.accounts,\n    progressPending: loading,\n    pagination: true,\n    onRowClicked: e => handleRowClicked(e),\n    onRowDoubleClicked: e => handleRowDoubleClicked(e)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 12\n  }, this);\n}\n_s(Accounts, \"SAjQWzKhBLE2CnCauB2D9TTQoPc=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Accounts;\n;\nvar _c;\n$RefreshReg$(_c, \"Accounts\");","map":{"version":3,"names":["DataTable","React","useState","useEffect","useDispatch","deleteAccount","useSelector","Form","Label","Input","Button","Accounts","props","loading","state","accounts","dispatch","handleRowClicked","row","console","log","handleRowDoubleClicked","handleEditClick","e","JSON","stringify","handleDeleteClick","id","columns","setColumns","name","selector","accountId","sortable","accountHolder","salary","experience","cell","ignoreRowClick","allowOverflow","button"],"sources":["/Users/atulgautam/Desktop/my-app/src/components/Accounts.js"],"sourcesContent":["import DataTable from 'react-data-table-component';\nimport { React, useState, useEffect } from 'react'\nimport {useDispatch} from 'react-redux'\nimport { deleteAccount } from '../Actions/AccountActions';\nimport {useSelector} from 'react-redux'\nimport {Form,Label,Input, Button} from 'semantic-ui-react'\nexport function Accounts(props) {\n\n\n    const loading = useSelector((state) => state.accounts.loading)\n\n    const dispatch = useDispatch()\n    // single click event use later for overlay. \n    const handleRowClicked = (row) => {\n        console.log(\"ROW CLICKED\")\n    }\n\n    // double click user later for edit \n    const handleRowDoubleClicked = (row) => console.log(\"ROW Double CLICKED\" + row)\n\n\n   const handleEditClick = (e) => {\n    console.log(\"BUTTON \" + JSON.stringify(e))\n   }\n\n   const handleDeleteClick = (row) => {\n    dispatch(deleteAccount(row.id))\n\n   }\n\n    const [columns, setColumns] = useState([]);\n\n    useEffect(() => {\n            setColumns([\n                {\n                    name: 'ACCOUNT ID',\n                    selector: row => row.accountId,\n                    sortable: true,\n                    // sortFunction: caseInsensitiveSort\n                },\n                {\n                    name: 'ACCOUNT HOLDER',\n                    selector: row => row.accountHolder,\n                },\n                {\n                    name: 'SALARY',\n                    selector: row => row.salary,\n                    sortable: true,\n                    // sortFunction: caseInsensitiveSort\n                },\n                {\n                    name: 'EXPERIENCE',\n                    selector: row => row.experience,\n                    sortable: true,\n                    // sortFunction: caseInsensitiveSort\n                },\n                {\n                    cell: (row) => <Button className =\"delete\" onClick={() => handleEditClick (row)}> EDIT</Button>,\n                    ignoreRowClick: true,\n                    allowOverflow: true,\n                    button: true,\n                },\n                {\n                    cell: (row) => <Button onClick={() => handleDeleteClick (row)}> DELETE</Button>,\n                    ignoreRowClick: true,\n                    allowOverflow: true,\n                    button: true,\n                }\n            ])\n        }, []);\n\n    return <DataTable columns={columns}\n        data={props.accounts}\n        progressPending={loading}\n        pagination\n        onRowClicked={(e) => handleRowClicked(e)}\n        onRowDoubleClicked={(e) => handleRowDoubleClicked(e)}\n    />;\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}