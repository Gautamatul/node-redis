{"ast":null,"code":"import createSagaMiddleware from 'redux-saga';\nimport { applyMiddleware, compose } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport rootSaga from './sagas/rootSaga';\nimport rootReducer from './reducer/rootReducer';\nconst sagaMiddleWare = createSagaMiddleware();\nlet enhancer;\n\n// if (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n//     enhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__(applyMiddleware(sagaMiddleWare, logger));\n// } else {\n//     enhancer = compose(applyMiddleware(sagaMiddleWare, logger))\n// }\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: [sagaMiddleWare, logger]\n});\nsagaMiddleWare.run(rootSaga);\nexport default store;\n\n// an individual action, saga, reducer but then its all added to rootReducer which is added to rootStore.","map":{"version":3,"names":["createSagaMiddleware","applyMiddleware","compose","configureStore","logger","rootSaga","rootReducer","sagaMiddleWare","enhancer","store","reducer","middleware","run"],"sources":["/Users/atulgautam/Desktop/my-app/src/store.js"],"sourcesContent":["import  createSagaMiddleware  from 'redux-saga'\nimport { applyMiddleware, compose } from 'redux'\nimport {configureStore} from '@reduxjs/toolkit'\nimport logger from 'redux-logger'\nimport rootSaga from './sagas/rootSaga';\nimport rootReducer from './reducer/rootReducer'\n    const sagaMiddleWare = createSagaMiddleware()\n    let enhancer;\n\n\n\n    // if (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n    //     enhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__(applyMiddleware(sagaMiddleWare, logger));\n    // } else {\n    //     enhancer = compose(applyMiddleware(sagaMiddleWare, logger))\n    // }\n\n    const store = configureStore({\n        reducer: rootReducer,\n        middleware: [sagaMiddleWare, logger],\n    })\n    sagaMiddleWare.run(rootSaga)\n    export default store\n\n// an individual action, saga, reducer but then its all added to rootReducer which is added to rootStore."],"mappings":"AAAA,OAAQA,oBAAoB,MAAO,YAAY;AAC/C,SAASC,eAAe,EAAEC,OAAO,QAAQ,OAAO;AAChD,SAAQC,cAAc,QAAO,kBAAkB;AAC/C,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,WAAW,MAAM,uBAAuB;AAC3C,MAAMC,cAAc,GAAGP,oBAAoB,EAAE;AAC7C,IAAIQ,QAAQ;;AAIZ;AACA;AACA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAGN,cAAc,CAAC;EACzBO,OAAO,EAAEJ,WAAW;EACpBK,UAAU,EAAE,CAACJ,cAAc,EAAEH,MAAM;AACvC,CAAC,CAAC;AACFG,cAAc,CAACK,GAAG,CAACP,QAAQ,CAAC;AAC5B,eAAeI,KAAK;;AAExB"},"metadata":{},"sourceType":"module","externalDependencies":[]}