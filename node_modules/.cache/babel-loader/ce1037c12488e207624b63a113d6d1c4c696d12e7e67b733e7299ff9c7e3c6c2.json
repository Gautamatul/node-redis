{"ast":null,"code":"import { call, put, takeEvery } from 'redux-saga/effects';\nimport { setAccounts } from '../Actions/AccountActions';\nimport { deleteData, getData } from '../api/httpClient';\nimport * as actionTypes from '../Actions/AccountActions';\n\n/**\n * GET_ACCOUNTS trigger the get request which takes a generator function makes get request and trigger another action to \n * update the reducer state.\n * \n */\n\nexport function* getAccounts() {\n  // yield put(clearErrorActiob())\n  try {\n    const results = yield call(getData, \"/accounts\");\n    yield put(setAccounts(results.data));\n  } catch (ex) {\n    console.log(\"ERROR !!\" + ex);\n  }\n}\nexport function* deleteAccount(action) {\n  try {\n    const results = yield call(deleteData, `/accounts/${action.accountId}`);\n    yield put(actionTypes.getAccounts());\n  } catch (ex) {\n    console.log(\"ERROR !!\" + ex);\n  }\n}\nexport function* watchGetAccounts() {\n  yield takeEvery(actionTypes.GET_ACCOUNTS, getAccounts);\n}\nexport function* watchDeleteAccount() {\n  yield takeEvery(actionTypes.DELETE_ACCOUNT, deleteAccount);\n}\nexport function* watchAddNewAccount() {\n  yield takeEvery(actionTypes.DELETE_ACCOUNT, deleteAccount);\n}","map":{"version":3,"names":["call","put","takeEvery","setAccounts","deleteData","getData","actionTypes","getAccounts","results","data","ex","console","log","deleteAccount","action","accountId","watchGetAccounts","GET_ACCOUNTS","watchDeleteAccount","DELETE_ACCOUNT","watchAddNewAccount"],"sources":["/Users/atulgautam/Desktop/my-app/src/sagas/accountSagas.js"],"sourcesContent":["import {call, put, takeEvery} from 'redux-saga/effects'\nimport { setAccounts } from '../Actions/AccountActions';\nimport { deleteData, getData } from '../api/httpClient';\nimport * as actionTypes from '../Actions/AccountActions';\n\n/**\n * GET_ACCOUNTS trigger the get request which takes a generator function makes get request and trigger another action to \n * update the reducer state.\n * \n */\n\n\nexport function* getAccounts () {\n    // yield put(clearErrorActiob())\n    try {\n        const results = yield call(getData,\"/accounts\");\n        yield put (setAccounts(results.data));\n\n\n    } catch(ex) {\n         console.log (\"ERROR !!\" + ex)\n    }\n}\n\nexport function* deleteAccount (action) {\n    try {\n        const results = yield call(deleteData,`/accounts/${action.accountId}`);\n        yield put(actionTypes.getAccounts())\n\n\n    } catch(ex) {\n         console.log (\"ERROR !!\" + ex)\n    }\n\n}\n\n\nexport function* watchGetAccounts() {\n    yield takeEvery(actionTypes.GET_ACCOUNTS, getAccounts)\n}\n\nexport function* watchDeleteAccount() {\n    yield takeEvery(actionTypes.DELETE_ACCOUNT, deleteAccount)\n}\n\nexport function* watchAddNewAccount() {\n    yield takeEvery(actionTypes.DELETE_ACCOUNT, deleteAccount)\n}"],"mappings":"AAAA,SAAQA,IAAI,EAAEC,GAAG,EAAEC,SAAS,QAAO,oBAAoB;AACvD,SAASC,WAAW,QAAQ,2BAA2B;AACvD,SAASC,UAAU,EAAEC,OAAO,QAAQ,mBAAmB;AACvD,OAAO,KAAKC,WAAW,MAAM,2BAA2B;;AAExD;AACA;AACA;AACA;AACA;;AAGA,OAAO,UAAUC,WAAW,GAAI;EAC5B;EACA,IAAI;IACA,MAAMC,OAAO,GAAG,MAAMR,IAAI,CAACK,OAAO,EAAC,WAAW,CAAC;IAC/C,MAAMJ,GAAG,CAAEE,WAAW,CAACK,OAAO,CAACC,IAAI,CAAC,CAAC;EAGzC,CAAC,CAAC,OAAMC,EAAE,EAAE;IACPC,OAAO,CAACC,GAAG,CAAE,UAAU,GAAGF,EAAE,CAAC;EAClC;AACJ;AAEA,OAAO,UAAUG,aAAa,CAAEC,MAAM,EAAE;EACpC,IAAI;IACA,MAAMN,OAAO,GAAG,MAAMR,IAAI,CAACI,UAAU,EAAE,aAAYU,MAAM,CAACC,SAAU,EAAC,CAAC;IACtE,MAAMd,GAAG,CAACK,WAAW,CAACC,WAAW,EAAE,CAAC;EAGxC,CAAC,CAAC,OAAMG,EAAE,EAAE;IACPC,OAAO,CAACC,GAAG,CAAE,UAAU,GAAGF,EAAE,CAAC;EAClC;AAEJ;AAGA,OAAO,UAAUM,gBAAgB,GAAG;EAChC,MAAMd,SAAS,CAACI,WAAW,CAACW,YAAY,EAAEV,WAAW,CAAC;AAC1D;AAEA,OAAO,UAAUW,kBAAkB,GAAG;EAClC,MAAMhB,SAAS,CAACI,WAAW,CAACa,cAAc,EAAEN,aAAa,CAAC;AAC9D;AAEA,OAAO,UAAUO,kBAAkB,GAAG;EAClC,MAAMlB,SAAS,CAACI,WAAW,CAACa,cAAc,EAAEN,aAAa,CAAC;AAC9D"},"metadata":{},"sourceType":"module","externalDependencies":[]}