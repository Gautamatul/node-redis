{"ast":null,"code":"var _jsxFileName = \"/Users/atulgautam/Desktop/my-app/src/components/Accounts.js\",\n  _s = $RefreshSig$();\nimport DataTable from 'react-data-table-component';\nimport { React, useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteAccount } from '../Actions/AccountActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Accounts(props) {\n  _s();\n  const dispatch = useDispatch();\n  // single click event use later for overlay. \n  const handleRowClicked = row => {\n    console.log(\"ROW CLICKED\");\n  };\n\n  // double click user later for edit \n  const handleRowDoubleClicked = row => console.log(\"ROW Double CLICKED\" + row);\n  const handleEditClick = e => {\n    console.log(\"BUTTON \" + JSON.stringify(e));\n  };\n  const handleDeleteClick = e => {\n    console.log(\"BUTTON \" + JSON.stringify(e));\n    dispatch(deleteAccount);\n  };\n  const [columns, setColumns] = useState([]);\n  const [pending, setPending] = useState(true);\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setColumns([{\n        name: 'ACCOUNT ID',\n        selector: row => row.accountId,\n        sortable: true\n        // sortFunction: caseInsensitiveSort\n      }, {\n        name: 'ACCOUNT HOLDER',\n        selector: row => row.accountHolder\n      }, {\n        name: 'SALARY',\n        selector: row => row.salary,\n        sortable: true\n        // sortFunction: caseInsensitiveSort\n      }, {\n        name: 'EXPERIENCE',\n        selector: row => row.experience,\n        sortable: true\n        // sortFunction: caseInsensitiveSort\n      }, {\n        cell: row => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditClick(row),\n          children: \" EDIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 36\n        }, this),\n        ignoreRowClick: true,\n        allowOverflow: true,\n        button: true\n      }, {\n        cell: row => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteClick(row),\n          children: \" DELETE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 36\n        }, this),\n        ignoreRowClick: true,\n        allowOverflow: true,\n        button: true\n      }]);\n      setPending(false);\n    }, 10);\n    return () => clearTimeout(timeout);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DataTable, {\n    columns: columns,\n    data: props.accounts,\n    progressPending: pending,\n    onRowClicked: e => handleRowClicked(e),\n    onRowDoubleClicked: e => handleRowDoubleClicked(e)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 12\n  }, this);\n}\n_s(Accounts, \"n7FynOwJD64clw41OWHc/EYpNow=\", false, function () {\n  return [useDispatch];\n});\n_c = Accounts;\n;\nvar _c;\n$RefreshReg$(_c, \"Accounts\");","map":{"version":3,"names":["DataTable","React","useState","useEffect","useDispatch","deleteAccount","Accounts","props","dispatch","handleRowClicked","row","console","log","handleRowDoubleClicked","handleEditClick","e","JSON","stringify","handleDeleteClick","columns","setColumns","pending","setPending","timeout","setTimeout","name","selector","accountId","sortable","accountHolder","salary","experience","cell","ignoreRowClick","allowOverflow","button","clearTimeout","accounts"],"sources":["/Users/atulgautam/Desktop/my-app/src/components/Accounts.js"],"sourcesContent":["import DataTable from 'react-data-table-component';\nimport { React, useState, useEffect } from 'react'\nimport {useDispatch} from 'react-redux'\nimport { deleteAccount } from '../Actions/AccountActions';\n\n\n\nexport function Accounts(props) {\n\n\n    const dispatch = useDispatch()\n    // single click event use later for overlay. \n    const handleRowClicked = (row) => {\n        console.log(\"ROW CLICKED\")\n    }\n\n    // double click user later for edit \n    const handleRowDoubleClicked = (row) => console.log(\"ROW Double CLICKED\" + row)\n\n\n   const handleEditClick = (e) => {\n    console.log(\"BUTTON \" + JSON.stringify(e))\n   }\n\n   const handleDeleteClick = (e) => {\n    console.log(\"BUTTON \" + JSON.stringify(e))\n    dispatch(deleteAccount)\n\n   }\n\n    const [columns, setColumns] = useState([]);\n    const [pending, setPending] = useState(true);\n\n    useEffect(() => {\n        const timeout = setTimeout(() => {\n            setColumns([\n                {\n                    name: 'ACCOUNT ID',\n                    selector: row => row.accountId,\n                    sortable: true,\n                    // sortFunction: caseInsensitiveSort\n                },\n                {\n                    name: 'ACCOUNT HOLDER',\n                    selector: row => row.accountHolder,\n                },\n                {\n                    name: 'SALARY',\n                    selector: row => row.salary,\n                    sortable: true,\n                    // sortFunction: caseInsensitiveSort\n                },\n                {\n                    name: 'EXPERIENCE',\n                    selector: row => row.experience,\n                    sortable: true,\n                    // sortFunction: caseInsensitiveSort\n                },\n                {\n                    cell: (row) => <button onClick={() => handleEditClick (row)}> EDIT</button>,\n                    ignoreRowClick: true,\n                    allowOverflow: true,\n                    button: true,\n                },\n                {\n                    cell: (row) => <button onClick={() => handleDeleteClick (row)}> DELETE</button>,\n                    ignoreRowClick: true,\n                    allowOverflow: true,\n                    button: true,\n                }\n            ])\n            setPending(false);\n        }, 10);\n        return () => clearTimeout(timeout);\n    }, []);\n\n    return <DataTable columns={columns}\n        data={props.accounts}\n        progressPending={pending}\n        onRowClicked={(e) => handleRowClicked(e)}\n        onRowDoubleClicked={(e) => handleRowDoubleClicked(e)}\n    />;\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}